
Rocket-auth-login
	Add repository url link in the Cargo.toml file
	
	Cleanup the administrator.rs module in the tls_example
		Remove the password module
		Cleanup all the commented-out old byte vector password code

	In examples, in the administrator module change the folowing
		cookies.remove_private(Cookie::named(AdministratorCookie::cookie_id()));
		to
	        Administrator::delete_cookie();
	
	Check the OWASP guide and also check which characters are in the unicode categories
		allowed by the sanitize functions, basically just make sure they're secure

Blogr	
	Use the rocket-file-cache crate to cache static files
		https://crates.io/crates/rocket-file-cache

	Add compression?
		Could use the zopfli crate for the gzip/deflate algorithm?
		https://github.com/SergioBenitez/Rocket/issues/195
		Make sure the AcceptEncoding allows compression, use the following as a reference:
			https://mmstick.tk/post/jmP

	Add content expiration headers?

	Convert blogr to ssl

	Get VPS

	Convert from the simple-auth to my rocket-auth-login crate for authentication and login processing

	Change the blogr database password to a text column called pass
	Add a text column called salt to the database
	Add a trigger and function to hash the password with the salt on insert or update
	Change sql for authentication to check for the salted password hash


	Force SSL unless in Dev mode
	
	Convert sanitize functions to using the unicode_segments crate


	Add a 404 page, maybe other error pages as well
		#[error(404)] I believe it is

	Add a TL;DR: section of articles
		Should be optional (nullable in the database)
		Should also be included in the full-text column
	
	Add article "types"
		The Markdown type will interpret the article contents as markdown and format it into HTML
			Maybe index all h1 (# or Text\n====) and h2 (## or Text\n-----)
				For each header add a <a name="lowercase_underscored_header">Header</a>
				Maybe add a vertical menu using the scrollspy bootstrap plugin thingy
		The HTML type will leave it as is, unprocessed
	
	Limit tags to only show top 50 tags, or maybe make a separate page that shows all of them

	Maybe: Add author to the homepage (multiple articles) instead of just on the single article?

	Does blogr search page show a form with the date range?
		I can't even remember, prolly not.

	Change search, article, and articles templates to show an author.
		Update the database to link each article to an author
		Update the RSS page to reflect the author for each article, use a join query to get the author

	Allow admin to delete posts and edit them

	Maybe add a preview as a popup modal
		display single article template in the modal template? (just the <article> and <script> tags)

	When creating a blog post fails for reasons other than unauthorized
		(or maybe even if its unauthorized)
		redirect back to create page with all of the form data filled in
		change the insert form template to include if statements to show msg
			{{#if info.msg}}{{{info.msg}}}{{/if}}

	Throttle brute force login attempts

	sanitize:
		login rety (admin and user): username and failmsg
		tag?<tag>: sanitize split_tags

	Add unique visitors
		Maybe create a file or in-memory list of ip addresses
			every once and a while write them to database

	Authenticate user properly with a database query

	GET /users
	GET /user?<userid> - userid: UserId
	POST /user	// saves changes to display email and any other properties
	Create a Users page that shows all users with public profiles
		add a is_public bool to the user table in the database
	Create a show user page that displays user information
		create a UserId struct with a single username attribute
		if the user has is_public set to false only admins can see it
		Show Username link, and emai
		if the viewer is an admin show a checkbox to change the is_admin field
		if the logged in user/admin is viewing their own page
			allow them to edit their information
				allow password to be changed
				add a hidden username form field
	Create a 
	Create a signup page
		ensure the user enters a password with a min length etc

	Make a page that lists articles by date, group by month maybe


	Add Tls/Ssl using Let's Encrypt
		https://mmstick.tk/post/q42
		https://rocket.rs/guide/configuration/#configuring-tls
		https://api.rocket.rs/rocket/config/struct.Config.html#method.set_tls
	Sanitizing strings
	Make an actual layout
	Maybe implement a cache
	maybe implement a file cache
		This would allow files to be served even when the url
		is a folder in root.  CSS & JS files for example will
		not work correctly if the url is: 
		localhost/view/category/blah
	Finish implementing the Usertype module, make it an enum that holds whatever?







Design:
	Figure out a way to make the middle box backgrounds transparent and the outside black still
		This allows a static background to be placed that will move with the page, 
			staying in the same position on the screen at all times
			only the content boxes moves, allowing their inside to display the image







Future Todo:
	Look into Handlebar Helper functions using Rocket_Contrib's Templates
	IMPORTANT
	Research NoSQL databases which could be faster
		Maybe even redis

	Cache all HTML output from pages using database queries
		Add an option in the hbs_template() that indicates whether it should
			look for and store cached results
			Maybe the option should be an Option<u32> indicating how many 
				minutes to store the cached contents
		Use Redis
		Or other caching tools

	Add search functionality
	
	Add a signup page

	Add pagination

	Build a search form with search term, min and max date(time), and tags

	Add editing and deletion capabilities for admins

	Add comments
	Add ability to reply to a specific comment
	Maybe add ability for admins to reply to a comment with a special styling, 
		like on newegg when companies reply to a comment about a problem
	Display a form allowing users to make new comments and edit and maybe delete their own


	Maybe when validating forms, set focus to first invalid form field
		set a var called something like is_focused = true after first field
		to prevent others from being focused





Research Futures
	try to implement caching by calling a function that returns a string and schedules an async function
	to write the string to a cache after the string is returned to allow the webpage to load while the 
	string is being written to the cache












Rocket-auth-login:
	BEFORE PUBLISH:
		change font demonized to another freeware font as demonized is personal-use
		the quicksand font is freeware and prolly doesnt have to change
	Add description and other settings to Cargo.toml file
	
	NOT DONE - Decided not to do this as the example are excluded from the actual published crate
	Add [[bin]] sections to the root crate's Cargo.toml



Done


	DO NOT  make password a byte vector, Vector<u8> instead of String
		the password comes in as a plaintext string, the only place it is
		not a string is in the database, and the database takes care of all
		of the hasing and salting stuff so keep the password a string!!!!!!

	Change passwords from using a simple hash to a hash(salt + password)
		make a database column called salt
		the salt is randomly generated and concatenated to the plaintext password before hashing
		the hash of the password+salt is what is stored in the database

	Add a method/helper function to retrieve an article and user from a qry
		retrieve the data from the raw qry
		returns a result <Article/User, String>
		maybe make a trait that defines methods on Strings?? for retrieving stuff like
			.retrieve_article()
	
	Add RSS feed (add link in footer)
		Maybe add clipboard.js to copy the link when clicked
	
	Add the article title in the url when possible
		change the links to the articles to include a substring of the title
		change the article page route to have a segment that ignores the title?

	
	Display a page that lists the tags, maybe even sort by number of posts each has
	
	DOES NOT WORK: localhost:8000/tag?tag=
		But should it??? Not really...

	Maybe add a page option in the hbs_template() function
		indicates which page should be highlighted in the nav bar

	Change description in insert form to text input box with maxlength=250
		Change maxlength in database as well
	
	Posting articles: maybe add a javascript function to alert the user when spaces are detected in the tag field but no commas are found
		Display: Did you mean to use commas instead of spaces?

	CONVERT TO HANDLEBARS OR MUSTACHE TEMPLATES
	Customize the navigation link
	Make the menu link to:
	view
	tags - create new page that list the unique tags, maybe even sort by number of posts each has
	insert - for admins
	login - for users who are not logged in
		if user either admin or regular user do not display login, whichever cookie is set determines the userlevel
	signup - create signup page

		Add dropdown menu for admin
			New Article
			Logout
		Add dropdown menu for user
			My Info
			My Comments
				for each artile the user has commented on:
					shows article title (that links to the article)
					a list of comments made by the user
					an edit/delete button for that comment

			Logout

		Add custom <title> tag text for each page??
			Replace the title with a page specific one
			For /article?<aid> make the title equal to VishusBlog: <article title>

	Add messages (msg) to general-template, article-template
	
	Eventually change the index page to list blog articles and show a login link elsewhere like in the nav

	Reduce margins for mobiles
	if landscape reduce nav brand font size

	Change validation to use jQuery and Bootstrap - looks sooo pretty

	Change tags from text to character varying[] (array of varchars)
		Make a tag column that will be the new tags

	Maybe add a number of tabs at the beginning of each line of body text in the template() function
		The number of tabs to be determined by the layout
	
	IMPORTANT
	url_decode() the strings FromForm implementation for ArticleForm
		They are being saved as url_encoded() strings in the database

	JAVASCRIPT
	Add a second password box that has no placeholder text and has display: none
		when form is submitted set display: none to current password box and enable the hdiden one
	Also set submit button to disablabled after validating

	Style the insert form with bootstrap forms
	
	Auto resize the article body text box height when text height is larger than the box's

	Called init_pg_pool in main on program startup to avoid the extra 80ms delay it takes
	Changed user parameter from Option<UserCookie> to AdminCookie
	Added unauthorized_post()

	Add Description field
	
	Only show a shortened body or description for tag and view pages

	Make the template() function take a String instead of a &str
		The String will not be used anymore so its ok to move its ownership
		The &str needed to be converted to a String anyways
		NEVERMIND - passing in a &str is better
			Passing as a string needs to pass it as a reference anyways
			Only thing it does it erase the passed in variable when it doesnt need to
	




	Maybe remove all the is_admin is_user username fields for the article templates
		Use javascript to add the edit/delete options
		But in the route check the correct cookie is set for that action

	

